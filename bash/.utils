# Opens the github page for the current git repository in your browser
# git@github.com:jasonneylon/dotfiles.git
# https://github.com/jasonneylon/dotfiles/
# Adapted from https://jasonneylon.wordpress.com/2011/04/22/opening-github-in-your-browser-from-the-terminal/
function gh() {
  remote=$(git config --get remote.origin.url)
  if [ "$remote" == "" ]
    then
     echo "Not a git repository or no remote.origin.url set"
     exit 1;
  fi

  remote=${remote/git\@github\.com\:/https://github.com/}
  remote=${remote/\.git/\/tree/}
  branch="$(git symbolic-ref HEAD 2>/dev/null)" || "(unnamed branch)"     # detached HEAD
  branch=${branch##refs/heads/}
  remote=$remote/$branch
  [ -x $(command -v start) ] && start $remote 2> /dev/null
  [ -x $(command -v xdg-open) ] && xdg-open $remote 2> /dev/null
}

function cheat() {
  curl "cheat.sh/$1" | less -R
}

colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

# Go up n directories
function up {
    if [ $# -eq 0 ]; then
        cd ..
        return 0;
    fi;

    local n;
    if [[ $1 =~ ^[0-9]+$ ]]; then
        local old=$PWD;
        for ((i=0; i<$1; i++)); do
            cd ..;
        done;
        export OLDPWD=$old;
    else
        echo "Argument must be a number"
        return 1
    fi;

}

#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
